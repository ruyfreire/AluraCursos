{"version":3,"sources":["../../app-es6/services/NegociacoesService.js"],"names":["HttpService","Negociacao","ConnectionFactory","NegociacaoDao","NegociacoesService","_http","Promise","all","_obterNegociacoesDaSemana","_obterNegociacoesDaSemanaAnterior","_obterNegociacoesDaSemanaRetrasada","then","negociacoes","reduce","arrayAchatado","array","concat","catch","erro","get","map","n","Date","data","quantidade","valor","Error","negociacao","getConnection","connection","dao","adiciona","console","log","listaAtual","obterNegociacoes","filter","some","negociacaoExistente","isEquals","con","listaTodos","apagaTodos"],"mappings":"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","sourcesContent":["import {HttpService} from \"../services/HttpService\";\r\nimport {Negociacao} from \"../models/Negociacao\";\r\nimport {ConnectionFactory} from \"../services/ConnectionFactory\";\r\nimport {NegociacaoDao} from \"../dao/NegociacaoDao\";\r\n\r\nexport class NegociacoesService {\r\n\r\n    constructor() {\r\n\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoes() {\r\n        \r\n        return Promise.all([\r\n            this._obterNegociacoesDaSemana(),\r\n            this._obterNegociacoesDaSemanaAnterior(),\r\n            this._obterNegociacoesDaSemanaRetrasada()]\r\n        )\r\n        .then( negociacoes =>\r\n            negociacoes\r\n                .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n        )\r\n        .catch(erro => erro);\r\n    }\r\n\r\n    _obterNegociacoesDaSemana() {\r\n\r\n        return this._http.get('negociacoes/semana')\r\n            .then( negociacoes =>\r\n                negociacoes.map(n =>\r\n                    new Negociacao(new Date(n.data),n.quantidade,n.valor))\r\n            )\r\n            .catch( () => {\r\n                throw new Error(\"Erro ao importar Negociações da Semana\")\r\n            })\r\n    }\r\n\r\n    _obterNegociacoesDaSemanaAnterior() {\r\n\r\n        return this._http.get('negociacoes/anterior')\r\n            .then( negociacoes =>\r\n                negociacoes.map(n =>\r\n                    new Negociacao(new Date(n.data),n.quantidade,n.valor))\r\n            )                \r\n            .catch( () => {\r\n                throw new Error(\"Erro ao importar Negociações da Semana Anterior\");                    \r\n            })\r\n    }\r\n\r\n    _obterNegociacoesDaSemanaRetrasada() {\r\n\r\n        return this._http.get('negociacoes/retrasada')\r\n            .then( negociacoes =>\r\n                negociacoes.map(n =>\r\n                    new Negociacao(new Date(n.data),n.quantidade,n.valor))\r\n            )                \r\n            .catch( () => {\r\n                throw new Error(\"Erro ao importar Negociações da Semana Retrasada\");                    \r\n            })\r\n    }\r\n\r\n\r\n    cadastra(negociacao) {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n                .then(connection => new NegociacaoDao(connection))\r\n                .then(dao => dao.adiciona(negociacao))\r\n                .then(() => \"Negociação adicionada com Sucesso\")\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    throw new Error(\"Não foi possível adicionar a negociação\")\r\n                });\r\n    }\r\n\r\n\r\n    importa(listaAtual) {\r\n\r\n        return this.obterNegociacoes()\r\n           .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                !listaAtual.some(negociacaoExistente =>\r\n                       negociacao.isEquals(negociacaoExistente)))\r\n           )\r\n           .catch(erro => {\r\n               console.log(erro);\r\n               throw new Error(\"Não foi possível importar as negociações\");\r\n           });\r\n    }\r\n\r\n    lista() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(con => new NegociacaoDao(con))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível obter as negociações\");\r\n            });\r\n    }\r\n\r\n    apaga() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n                .then( connection => new NegociacaoDao(connection))\r\n                .then(dao => dao.apagaTodos())\r\n                .then(() => \"Negociações apagadas com sucesso\")\r\n                .catch( erro => {\r\n                    console.log(erro);\r\n                    throw new Error(\"Erro ao apagar as negociações\");\r\n                });\r\n\r\n    }\r\n    \r\n}"],"file":"NegociacoesService.js"}