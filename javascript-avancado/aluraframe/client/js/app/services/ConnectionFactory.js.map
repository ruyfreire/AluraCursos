{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["version","dbName","stores","connection","close","ConnectionFactory","Error","Promise","resolve","reject","requestConnection","window","indexedDB","open","onupgradeneeded","e","_createStores","target","result","onsuccess","bind","onerror","error","name","forEach","store","objectStoreNames","contains","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAMA,MAAAA,O,GAAU,C;AACVC,MAAAA,M,GAAS,Y;AACTC,MAAAA,M,GAAS,CAAC,aAAD,C;AAEXC,MAAAA,U,GAAa,I;AACbC,MAAAA,K,GAAQ,I;;mCAECC,iB;AAET,qCAAc;AAAA;;AAEV,gBAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACH;;;;0CAEsB;AAEnB,mBAAO,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAErC,kBAAIC,iBAAiB,GAAGC,MAAM,CAACC,SAAP,CAAiBC,IAAjB,CAAsBZ,MAAtB,EAA8BD,OAA9B,CAAxB;;AAEAU,cAAAA,iBAAiB,CAACI,eAAlB,GAAoC,UAAAC,CAAC,EAAI;AACrCV,gBAAAA,iBAAiB,CAACW,aAAlB,CAAgCD,CAAC,CAACE,MAAF,CAASC,MAAzC;AACH,eAFD;;AAIAR,cAAAA,iBAAiB,CAACS,SAAlB,GAA8B,UAAAJ,CAAC,EAAI;AAC/B,oBAAG,CAACZ,UAAJ,EAAgB;AACZA,kBAAAA,UAAU,GAAGY,CAAC,CAACE,MAAF,CAASC,MAAtB;AAEAd,kBAAAA,KAAK,GAAGD,UAAU,CAACC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;;AACAA,kBAAAA,UAAU,CAACC,KAAX,GAAmB,YAAY;AAC3B,0BAAM,IAAIE,KAAJ,CAAU,wCAAV,CAAN;AACH,mBAFD;AAGH;;AACDE,gBAAAA,OAAO,CAACL,UAAD,CAAP;AACH,eAVD;;AAYAO,cAAAA,iBAAiB,CAACW,OAAlB,GAA4B,UAAAN,CAAC,EAAI;AAC7BN,gBAAAA,MAAM,CAACM,CAAC,CAACE,MAAF,CAASK,KAAT,CAAeC,IAAhB,CAAN;AACH,eAFD;AAGH,aAvBM,CAAP;AAwBH;;;wCAEoBpB,U,EAAY;AAE7BD,YAAAA,MAAM,CAACsB,OAAP,CAAe,UAAAC,KAAK,EAAI;AACpB,kBAAGtB,UAAU,CAACuB,gBAAX,CAA4BC,QAA5B,CAAqCF,KAArC,CAAH,EACItB,UAAU,CAACyB,iBAAX,CAA6BH,KAA7B;AAEJtB,cAAAA,UAAU,CAAC0B,iBAAX,CAA6BJ,KAA7B,EAAoC;AAAEK,gBAAAA,aAAa,EAAE;AAAjB,eAApC;AACH,aALD;AAMH;;;4CAEwB;AACrB1B,YAAAA,KAAK;AACLD,YAAAA,UAAU,GAAG,IAAb;AACH","sourcesContent":["const version = 1;\r\nconst dbName = 'aluraframe';\r\nconst stores = ['negociacoes'];\r\n\r\nlet connection = null;\r\nlet close = null;\r\n\r\nexport class ConnectionFactory {\r\n\r\n    constructor() {\r\n\r\n        throw new Error(\"Não pode criar instantia desta classe!\");\r\n    }\r\n\r\n    static getConnection() {\r\n        \r\n        return new Promise( (resolve, reject) => {\r\n\r\n            let requestConnection = window.indexedDB.open(dbName, version);\r\n            \r\n            requestConnection.onupgradeneeded = e => {\r\n                ConnectionFactory._createStores(e.target.result);\r\n            }\r\n\r\n            requestConnection.onsuccess = e => {\r\n                if(!connection) {\r\n                    connection = e.target.result;\r\n\r\n                    close = connection.close.bind(connection);\r\n                    connection.close = function () {\r\n                        throw new Error(\"Você não pode fechar a conexão direto.\");\r\n                    }\r\n                }\r\n                resolve(connection);\r\n            }\r\n            \r\n            requestConnection.onerror = e => {\r\n                reject(e.target.error.name);\r\n            }\r\n        });\r\n    }\r\n\r\n    static _createStores(connection) {\r\n\r\n        stores.forEach(store => {\r\n            if(connection.objectStoreNames.contains(store))\r\n                connection.deleteObjectStore(store)\r\n\r\n            connection.createObjectStore(store, { autoIncrement: true });\r\n        });\r\n    }\r\n\r\n    static closeConnection() {\r\n        close();\r\n        connection = null;\r\n    }\r\n}"],"file":"ConnectionFactory.js"}